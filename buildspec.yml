#version: 0.2
#phases:
#  pre_build:
#    commands:
#      - echo Logging in to Amazon ECR....
#      - aws --version
#      #- $(aws ecr get-login --region ap-south-1 --no-include-email)
#      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 533267191976.dkr.ecr.ap-northeast-2.amazonaws.com
#      - # Replace with this to your repository URI
#      - REPOSITORY_URI=533267191976.dkr.ecr.ap-northeast-2.amazonaws.com/reddi-server
#      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#  build:
#    commands:
#      - echo Build started on `date`
#      - echo building the Jar file
#      - ./gradlew bootJar
#      - echo Building the Docker image...
#      - docker build -t $REPOSITORY_URI:latest .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#  post_build:
#    commands:
#      - echo Build completed on `date`
#      - echo pushing to repo
#      - docker push $REPOSITORY_URI:latest
#      - docker push $REPOSITORY_URI:$IMAGE_TAG
#      - echo Writing image definitions file...
#      # Give your container name
#      - DOCKER_CONTAINER_NAME=reddi-server-container
#      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#      - echo $DOCKER_CONTAINER_NAME
#      - echo printing imagedefinitions.json
#      - cat imagedefinitions.json
#artifacts:
#  files:
#    - imagedefinitions.json
#    - build/libs/reddi-server.jar